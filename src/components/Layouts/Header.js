import React from 'react';
import { Avatar, Dropdown, Button } from 'neetoui';

const NeetoTodoLogo = () => (
  <svg width="70" height="24" viewBox="0 0 70 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M18.4363 9.86037C18.4363 10.733 18.4363 11.6019 18.4363 12.4783C18.4363 13.3548 18.4363 14.2236 18.4589 15.0963C18.4997 15.8229 18.3627 16.5485 18.0601 17.2082C17.7468 17.8433 17.2097 18.3355 16.5554 18.5869C15.8237 18.8867 15.1597 19.0032 14.4995 18.8638C13.8393 18.7244 13.1829 18.331 12.4587 17.6131C11.1772 16.3337 9.89938 15.0473 8.62537 13.7539C7.35136 12.4605 6.07922 11.1703 4.80897 9.88328C4.60979 9.65301 4.38581 9.44613 4.14124 9.26651C4.00851 9.18035 3.85707 9.12837 3.70008 9.11506C3.54308 9.10175 3.38525 9.12752 3.24028 9.19012C3.07721 9.24167 2.92896 9.33277 2.80836 9.45553C2.68776 9.57831 2.59843 9.72905 2.5481 9.89474C2.46616 10.2221 2.43256 10.5599 2.44841 10.8972C2.44841 12.323 2.4528 13.7507 2.46157 15.1803C2.46157 16.6086 2.46157 18.0446 2.43712 19.4653C2.42228 19.8231 2.48321 20.1799 2.61581 20.5117C2.74314 20.8197 2.97368 21.072 3.26661 21.224C3.41537 21.3042 3.58041 21.3484 3.7488 21.353C3.91718 21.3576 4.08434 21.3226 4.23717 21.2507C4.55289 21.1033 4.83918 20.8981 5.0817 20.6454C5.66479 20.07 6.24474 19.4908 6.82156 18.9077C7.39838 18.3247 7.96579 17.7353 8.5238 17.1395C8.63197 17.0109 8.76407 16.9052 8.91255 16.8285C9.06102 16.7519 9.22294 16.7057 9.38903 16.6927C9.70242 16.6942 10.0075 16.795 10.2618 16.981C10.5025 17.1414 10.6135 17.487 10.606 17.8517C10.6076 18.2166 10.477 18.5693 10.2392 18.8428C9.54702 19.5531 8.86049 20.273 8.17019 20.9834C7.47989 21.6937 6.77266 22.3964 6.04662 23.0705C5.51344 23.5844 4.82886 23.9064 4.09798 23.9871C3.36305 24.0447 2.62588 23.9092 1.95749 23.5937C1.34578 23.3493 0.82529 22.9157 0.469673 22.3544C0.136568 21.7704 -0.0252714 21.1019 0.0032033 20.4277C0.0201316 18.6671 0.0182507 16.9065 0.0163698 15.144C0.0144889 13.3815 0.0163698 11.6229 0.0163698 9.86037C0.0015575 9.16011 0.145047 8.46572 0.435816 7.83054C0.742984 7.20471 1.27478 6.72223 1.92175 6.48242C2.59255 6.20224 3.32955 6.12788 4.04155 6.26855C4.7753 6.44332 5.44041 6.83782 5.95069 7.4009C7.24101 8.73757 8.54261 10.0653 9.8555 11.3842C11.1684 12.703 12.4775 14.0244 13.7829 15.3484C13.9608 15.5458 14.1654 15.7168 14.3904 15.8563C14.5035 15.9225 14.6295 15.9626 14.7595 15.9738C14.8895 15.985 15.0204 15.9671 15.1428 15.9212C15.3788 15.8495 15.5931 15.7181 15.7654 15.5393C15.9405 15.326 16.028 15.0525 16.0099 14.7755C15.9911 13.1658 15.9911 11.5637 15.9911 9.96157C15.9911 8.35948 15.9911 6.75548 15.9911 5.15338C16.003 4.91136 15.9652 4.66946 15.8801 4.44304C15.8264 4.32817 15.7509 4.22519 15.658 4.14C15.565 4.0548 15.4564 3.98907 15.3384 3.94656C15.109 3.8364 14.8586 3.77902 14.6048 3.77852C14.3437 3.79699 14.0949 3.89855 13.8938 4.06877C13.1833 4.6353 12.5144 5.25372 11.8925 5.91911C11.2624 6.57216 10.6474 7.24241 9.98904 7.86873C9.74413 8.13695 9.4188 8.31551 9.06363 8.37667C8.9074 8.38551 8.75125 8.35793 8.60714 8.29603C8.46303 8.23414 8.3348 8.13957 8.23226 8.01958C8.111 7.8999 8.01611 7.75548 7.95386 7.59584C7.89161 7.4362 7.86341 7.26498 7.87112 7.09346C7.89582 6.72377 8.05624 6.37694 8.32066 6.12151C8.98651 5.44682 9.6511 4.77212 10.3144 4.09742C10.9778 3.42272 11.6455 2.75311 12.3176 2.08859C12.7387 1.69101 13.246 1.39952 13.7985 1.23765C14.351 1.07578 14.9333 1.04806 15.4983 1.15674C16.0654 1.23786 16.6058 1.45287 17.0762 1.7845C17.5466 2.11613 17.9339 2.55515 18.2068 3.06627C18.2905 3.2308 18.3537 3.40528 18.3949 3.58566C18.435 3.76802 18.4539 3.95451 18.4513 4.14133C18.4438 5.09228 18.4438 6.04704 18.4513 7.00563C18.4589 7.96421 18.4538 8.91579 18.4363 9.86037Z" fill="#27272A"/>
    <path d="M26.7073 14.8423V2.53556H22.473V0.412286H33.6191V2.53556H29.3641V14.8423H26.7073Z" fill="#27272A"/>
    <path d="M38.6001 15.0897C37.6038 15.0897 36.7044 14.8629 35.9018 14.4094C35.1131 13.9559 34.4835 13.3306 34.013 12.5335C33.5564 11.7227 33.3281 10.7882 33.3281 9.72995C33.3281 8.67175 33.5633 7.74411 34.0338 6.94702C34.5042 6.13619 35.1339 5.50402 35.9226 5.0505C36.7252 4.59699 37.6246 4.37023 38.6209 4.37023C39.6034 4.37023 40.489 4.59699 41.2777 5.0505C42.0803 5.50402 42.7099 6.13619 43.1665 6.94702C43.637 7.74411 43.8722 8.67175 43.8722 9.72995C43.8722 10.7882 43.637 11.7227 43.1665 12.5335C42.7099 13.3306 42.0803 13.9559 41.2777 14.4094C40.4751 14.8629 39.5826 15.0897 38.6001 15.0897ZM38.6001 12.8015C39.292 12.8015 39.894 12.5472 40.4059 12.0388C40.9179 11.5165 41.1739 10.7469 41.1739 9.72995C41.1739 8.71298 40.9179 7.95025 40.4059 7.44176C39.894 6.91953 39.2989 6.65842 38.6209 6.65842C37.9152 6.65842 37.3063 6.91953 36.7944 7.44176C36.2962 7.95025 36.0471 8.71298 36.0471 9.72995C36.0471 10.7469 36.2962 11.5165 36.7944 12.0388C37.3063 12.5472 37.9083 12.8015 38.6001 12.8015Z" fill="#27272A"/>
    <path d="M50.9801 15.0897C50.0115 15.0897 49.1467 14.856 48.3856 14.3888C47.6245 13.9215 47.0226 13.2825 46.5798 12.4717C46.137 11.6608 45.9156 10.7401 45.9156 9.70934C45.9156 8.67862 46.137 7.76472 46.5798 6.96763C47.0226 6.1568 47.6245 5.52463 48.3856 5.07112C49.1467 4.60386 50.0115 4.37023 50.9801 4.37023C51.755 4.37023 52.4331 4.51453 53.0142 4.80313C53.5954 5.09173 54.0659 5.49715 54.4257 6.01938V0H57.0825V14.8423H54.7163L54.4257 13.3787C54.0936 13.8322 53.6508 14.2307 53.0973 14.5743C52.5576 14.9179 51.8519 15.0897 50.9801 15.0897ZM51.5405 12.7809C52.3985 12.7809 53.0973 12.4991 53.6369 11.9357C54.1904 11.3585 54.4672 10.6232 54.4672 9.72995C54.4672 8.83666 54.1904 8.10829 53.6369 7.54483C53.0973 6.96763 52.3985 6.67903 51.5405 6.67903C50.6965 6.67903 49.9977 6.96076 49.4442 7.52422C48.8907 8.08768 48.6139 8.81605 48.6139 9.70934C48.6139 10.6026 48.8907 11.3379 49.4442 11.9151C49.9977 12.4923 50.6965 12.7809 51.5405 12.7809Z" fill="#27272A"/>
    <path d="M64.7279 15.0897C63.7316 15.0897 62.8322 14.8629 62.0296 14.4094C61.2409 13.9559 60.6112 13.3306 60.1408 12.5335C59.6841 11.7227 59.4558 10.7882 59.4558 9.72995C59.4558 8.67175 59.6911 7.74411 60.1615 6.94702C60.632 6.13619 61.2616 5.50402 62.0504 5.0505C62.8529 4.59699 63.7524 4.37023 64.7487 4.37023C65.7311 4.37023 66.6167 4.59699 67.4055 5.0505C68.208 5.50402 68.8376 6.13619 69.2943 6.94702C69.7648 7.74411 70 8.67175 70 9.72995C70 10.7882 69.7648 11.7227 69.2943 12.5335C68.8376 13.3306 68.208 13.9559 67.4055 14.4094C66.6029 14.8629 65.7104 15.0897 64.7279 15.0897ZM64.7279 12.8015C65.4198 12.8015 66.0217 12.5472 66.5337 12.0388C67.0457 11.5165 67.3017 10.7469 67.3017 9.72995C67.3017 8.71298 67.0457 7.95025 66.5337 7.44176C66.0217 6.91953 65.4267 6.65842 64.7487 6.65842C64.043 6.65842 63.4341 6.91953 62.9221 7.44176C62.424 7.95025 62.1749 8.71298 62.1749 9.72995C62.1749 10.7469 62.424 11.5165 62.9221 12.0388C63.4341 12.5472 64.036 12.8015 64.7279 12.8015Z" fill="#27272A"/>
  </svg>

)

const Target = () => {
  return (
    <div className="flex flex-row items-center justify-start cursor-pointer group">
      <Avatar
        size={32}
        contact={{ name: "Neeraj Singh" }}
      />
      <i className="ml-1 text-gray-500 ri-arrow-down-s-line group-hover:text-gray-700"/>
    </div>
  )
}

const Header = () => {
  return (
    <div className="nt-header">
      <NeetoTodoLogo/>
      <div className="flex flex-row items-center justify-end">
        <Button
          label="Add Task"
          icon="ri-add-line"
          className="mr-6"
        />
        <Dropdown
          customTarget={Target}
        >
          <li>Profile Settings</li>
          <li className="text-red-500 hover:text-red-600">Logout</li>
        </Dropdown>
      </div>
    </div>
  )
}

export default Header
